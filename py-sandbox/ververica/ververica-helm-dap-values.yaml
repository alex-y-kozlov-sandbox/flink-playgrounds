acceptCommunityEditionLicense: true
vvp:
  registry: registry.ververica.com/v2.6
  ## Authentication configuration. - unavail in Community Edition
  #auth: 

  blobStorage:
    ## The base URI for universal blob storage.
    ##
    ## If unset, universal blob storage is disabled. If credentials are required, add them to the
    ## "Blob storage credentials" section below.
    #baseUri: ""

    ## Additional config options for supported blob storage providers.
    #s3:
    #  endpoint: ""
    #  region: ""
    #oss:
    #  endpoint: ""
    baseUri: s3://vvp
    s3:
      endpoint: http://minio.vvp.svc:9000      
  globalDeploymentDefaults: |
    spec:
      state: RUNNING
      template:
        spec:
          resources:
            jobmanager:
              cpu: 0.5
              memory: 1G
            taskmanager:
              cpu: 0.5
              memory: 1G
          flinkConfiguration:
            state.backend: filesystem
            taskmanager.memory.managed.fraction: 0.0 # no managed memory needed for filesystem statebackend
            high-availability: vvp-kubernetes
            metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
            execution.checkpointing.interval: 10s
            execution.checkpointing.externalized-checkpoint-retention: RETAIN_ON_CANCELLATION
  persistence:
    type: local
  sqlService:
    pool:
      coreSize: 1
      maxSize: 1

##
## Blob storage credentials
##
blobStorageCredentials:
#  ## Use an existing Kubernetes secret instead of providing credentials in this file. The keys
#  ## within the secret must follow the format: `<provider>.<credential>`
#  ##
#  ## For example: `s3.accessKeyId` or `azure.connectionString`
#  existingSecret: ""
#
#  azure:
#    connectionString: ""
#  s3:
#    accessKeyId: ""
#    secretAccessKey: ""
#  oss:
#    accessKeyId: ""
#    accessKeySecret: ""
#  hdfs:
#    core-site.xml: ""
#    hdfs-site.xml: ""
#    krb5.conf: ""
#    keytab: ""
#    keytab-principal: ""
  s3:
    accessKeyId: admin
    secretAccessKey: password

##
## Container configuration for the application manager component
##
appmanager:
  image:
    pullPolicy: IfNotPresent

##
## Container configuration for the gateway component
##
gateway:
  image:
    pullPolicy: IfNotPresent

##
## Container configuration for the ui component
##
ui:
  image:
    pullPolicy: IfNotPresent

##
## Kubernetes Service configuration
##
service:
  type: ClusterIP
  externalPort: 80
  targetPort: 8080
  labels: {}
  annotations: {}

##
## Kubernetes PersistentVolume configuration
##
persistentVolume:
  enabled: true
  # These must match the accessModes of the existing PVC or dynamic provisioner
  # Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  accessModes:
  - ReadWriteOnce
  # PVC annotations
  annotations: {}
  # Use an existing PVC
  #existingClaim: ""
  size: 8Gi
  # PV storage class
  # If defined, storageClassName: <storageClass>
  # If undefined (the default) or set to null, no storageClassName spec is
  #   set, choosing the default provisioner.  (gp2 on AWS, standard on
  #   GKE, AWS & OpenStack)
  storageClass: default
  # Subdirectory of the PersistentVolume to use
  subPath: ""
